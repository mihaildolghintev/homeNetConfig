{ config, pkgs, ... }:
 let
    myCustomLayout = pkgs.writeText "xkb-layout" ''
      ! remove Caps Lock
      clear lock
      ! remove Lock = Caps_Lock
      keycode 66 = NoSymbol NoSymbol
      keycode 66 = ISO_Level3_Shift

      keysym h = h H NoSymbol NoSymbol Left Left
      keysym j = j J NoSymbol NoSymbol Down Down
      keysym k = k K NoSymbol NoSymbol Up Up
      keysym l = l L NoSymbol NoSymbol Right Rightk
    '';
  in
{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  networking.useDHCP = false;
  networking.interfaces.eno1.useDHCP = true;

  # i18n = {
  #   font = "Lat2-Terminus16";
  #   keyMap = "us";
  #   defaultLocale = "en_US.UTF-8";
  # };

  time.timeZone = "Europe/Amsterdam";

  users.users.mishakos = {
  	isNormalUser = true;
  	extraGroups = [ "wheel" ];
	  createHome = true;
	  home = "/home/mishakos";
	  shell = pkgs.zsh;
  };


  services.dbus.packages = with pkgs; [ gnome3.dconf ];

  nixpkgs.config.allowUnfree = true;


  hardware.opengl = {
    enable = true;
    driSupport = true;
    driSupport32Bit = true;
    extraPackages = with pkgs; [
      vaapiIntel
      vaapiVdpau
      libvdpau-va-gl
      intel-media-driver
    ];
  };

  hardware.pulseaudio = {
    enable = true;
    package = pkgs.pulseaudioFull;
  };

  programs.dconf.enable = true;

  programs = {
    zsh = {
      enable = true;
      autosuggestions.enable = true;
      autosuggestions.extraConfig = {
        "ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE"="fg=5";
      };
      enableCompletion = true;
      ohMyZsh.enable = true;
      ohMyZsh.plugins = [ "git" "sudo" ];
      ohMyZsh.theme = "af-magic";
    };
    gnome-disks.enable = true;
    udevil.enable = true;
  };

  fonts = {
    fonts = with pkgs; [
        corefonts
        fira-code
        siji
        symbola
    ];

    fontconfig = {
      subpixel.rgba = "rgb";
      antialias = true;
      hinting.enable = true;
      hinting.autohint = true;
      includeUserConf = true;
      localConf = ''
	      <match target="font">
	        <edit name="autohint" mode="assign">
	          <bool>true</bool>
	        </edit>
	        <edit name="hinting" mode="assign">
	          <bool>true</bool>
	        </edit>
	        <edit mode="assign" name="hintstyle">
	          <const>hintslight</const>
	        </edit>
	        <edit mode="assign" name="lcdfilter">
	          <const>lcddefault</const>
	        </edit>
	      </match>
      '';
      # defaultFonts = {
      #   monospace = [ "PragmataPro Mono Liga" ];
      #   sansSerif = [ "PragmataPro Mono Liga" ];
      #   serif = [ "PragmataPro Mono Liga" ];
      # };
    };
  };

  services.xserver = {
    enable = true;
    autoRepeatDelay = 250;
    autoRepeatInterval = 50;
    layout = "us, ru";
    xkbOptions = "grp:alt_shift_toggle";
    xautolock = {
      enable = true;
      time = 5;
      locker = "${pkgs.betterlockscreen}/bin/betterlockscreen -l dim";
      extraOptions = [ "-lockaftersleep" ];
    };

    windowManager = {
      xmonad = {
        enable = true;
	      haskellPackages = pkgs.haskellPackages;
        extraPackages = haskellPackages: [
          haskellPackages.xmonad-contrib_0_16
          haskellPackages.xmonad-extras
          haskellPackages.xmonad
          haskellPackages.xmobar
        ];
     };
    };

    desktopManager = {
      xterm.enable = false;
    };
	
    displayManager.lightdm = {
      enable = true;
      greeters.gtk.theme = {
        name = "Adwaita-dark";
        package = pkgs.gnome3.gnome_themes_standard;
      };
    };
    displayManager.sessionCommands = "${pkgs.xorg.xmodmap}/bin/xmodmap ${myCustomLayout}";

  };

  environment.systemPackages = with pkgs; [
    wget curl git
    xclip xorg.xkill               # Xorg
    xorg.xmodmap
    google-chrome-beta
    exa
    dunst
    libnotify
    neofetch
    htop
    vscode
    spotify
    qt5ct lxappearance
    pywal wpgtk
    neovim
    xmobar
    tdesktop
    betterlockscreen
    pfetch
    alacritty
    picom
    rofi
    zathura
  ];


  system = {
    stateVersion = "20.03";
    autoUpgrade = {
      enable = true;
      dates = "weekly";
    };
  }; # Did you read the comment?

}

